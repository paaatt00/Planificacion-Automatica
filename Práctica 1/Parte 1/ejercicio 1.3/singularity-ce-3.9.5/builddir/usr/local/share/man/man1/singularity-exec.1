.nh
.TH "singularity" "1" "Mar 2022" "Auto generated by spf13/cobra" ""

.SH NAME
.PP
singularity-exec - Run a command within a container


.SH SYNOPSIS
.PP
\fBsingularity exec [exec options...]  \fP


.SH DESCRIPTION
.PP
singularity exec supports the following formats:

.PP
*.sif               Singularity Image Format (SIF). Native to Singularity 3.0+

.PP
*.sqsh              SquashFS format.  Native to Singularity 2.4+

.PP
*.img               ext3 format. Native to Singularity versions < 2.4.

.PP
directory/          sandbox format. Directory containing a valid root file
                      system and optionally Singularity meta-data.

.PP
instance://*        A local running instance of a container. (See the instance
                      command group.)

.PP
library://*         A SIF container hosted on a Library
                      (default https://cloud.sylabs.io/library)

.PP
docker://*          A Docker/OCI container hosted on Docker Hub or another
                      OCI registry.

.PP
shub://*            A container hosted on Singularity Hub.

.PP
oras://*            A SIF container hosted on an OCI registry that supports
                      the OCI Registry As Storage (ORAS) specification.


.SH OPTIONS
.PP
\fB--add-caps\fP=""
	a comma separated capability list to add

.PP
\fB--allow-setuid\fP[=false]
	allow setuid binaries in container (root only)

.PP
\fB--app\fP=""
	set an application to run inside a container

.PP
\fB--apply-cgroups\fP=""
	apply cgroups from file for container processes (root only)

.PP
\fB-B\fP, \fB--bind\fP=[]
	a user-bind path specification.  spec has the format src[:dest[:opts]], where src and dest are outside and inside paths.  If dest is not given, it is set equal to src.  Mount options ('opts') may be specified as 'ro' (read-only) or 'rw' (read/write, which is the default). Multiple bind paths can be given by a comma separated list.

.PP
\fB-e\fP, \fB--cleanenv\fP[=false]
	clean environment before running container

.PP
\fB--compat\fP[=false]
	apply settings for increased OCI/Docker compatibility. Infers --containall, --no-init, --no-umask, --writable-tmpfs.

.PP
\fB-c\fP, \fB--contain\fP[=false]
	use minimal /dev and empty other directories (e.g. /tmp and $HOME) instead of sharing filesystems from your host

.PP
\fB-C\fP, \fB--containall\fP[=false]
	contain not only file systems, but also PID, IPC, and environment

.PP
\fB--disable-cache\fP[=false]
	dont use cache, and dont create cache

.PP
\fB--dns\fP=""
	list of DNS server separated by commas to add in resolv.conf

.PP
\fB--docker-login\fP[=false]
	login to a Docker Repository interactively

.PP
\fB--drop-caps\fP=""
	a comma separated capability list to drop

.PP
\fB--env\fP=[]
	pass environment variable to contained process

.PP
\fB--env-file\fP=""
	pass environment variables from file to contained process

.PP
\fB-f\fP, \fB--fakeroot\fP[=false]
	run container in new user namespace as uid 0

.PP
\fB--fusemount\fP=[]
	A FUSE filesystem mount specification of the form ': \&' - where  is 'container' or 'host', specifying where the mount will be performed ('container-daemon' or 'host-daemon' will run the FUSE process detached).  is the path to the FUSE executable, plus options for the mount.  is the location in the container to which the FUSE mount will be attached. E.g. 'container:sshfs 10.0.0.1:/ /sshfs'. Implies --pid.

.PP
\fB-h\fP, \fB--help\fP[=false]
	help for exec

.PP
\fB-H\fP, \fB--home\fP="/home/pachben1"
	a home directory specification.  spec can either be a src path or src:dest pair.  src is the source path of the home directory outside the container and dest overrides the home directory within the container.

.PP
\fB--hostname\fP=""
	set container hostname

.PP
\fB-i\fP, \fB--ipc\fP[=false]
	run container in a new IPC namespace

.PP
\fB--keep-privs\fP[=false]
	let root user keep privileges in container (root only)

.PP
\fB--mount\fP=[]
	a mount specification e.g. 'type=bind,source=/opt,destination=/hostopt'.

.PP
\fB-n\fP, \fB--net\fP[=false]
	run container in a new network namespace (sets up a bridge network interface by default)

.PP
\fB--network\fP="bridge"
	specify desired network type separated by commas, each network will bring up a dedicated interface inside container

.PP
\fB--network-args\fP=[]
	specify network arguments to pass to CNI plugins

.PP
\fB--no-home\fP[=false]
	do NOT mount users home directory if /home is not the current working directory

.PP
\fB--no-https\fP[=false]
	use http instead of https for docker:// oras:// and library:///... URIs

.PP
\fB--no-init\fP[=false]
	do NOT start shim process with --pid

.PP
\fB--no-mount\fP=[]
	disable one or more mount xxx options set in singularity.conf

.PP
\fB--no-privs\fP[=false]
	drop all privileges from root user in container)

.PP
\fB--no-umask\fP[=false]
	do not propagate umask to the container, set default 0022 umask

.PP
\fB--nv\fP[=false]
	enable Nvidia support

.PP
\fB--nvccli\fP[=false]
	use nvidia-container-cli for GPU setup (experimental)

.PP
\fB-o\fP, \fB--overlay\fP=[]
	use an overlayFS image for persistent data storage or as read-only layer of container

.PP
\fB--passphrase\fP[=false]
	prompt for an encryption passphrase

.PP
\fB--pem-path\fP=""
	enter an path to a PEM formatted RSA key for an encrypted container

.PP
\fB-p\fP, \fB--pid\fP[=false]
	run container in a new PID namespace

.PP
\fB--pwd\fP=""
	initial working directory for payload process inside the container

.PP
\fB--rocm\fP[=false]
	enable experimental Rocm support

.PP
\fB-S\fP, \fB--scratch\fP=[]
	include a scratch directory within the container that is linked to a temporary dir (use -W to force location)

.PP
\fB--security\fP=[]
	enable security features (SELinux, Apparmor, Seccomp)

.PP
\fB-u\fP, \fB--userns\fP[=false]
	run container in a new user namespace, allowing Singularity to run completely unprivileged on recent kernels. This disables some features of Singularity, for example it only works with sandbox images.

.PP
\fB--uts\fP[=false]
	run container in a new UTS namespace

.PP
\fB--vm\fP[=false]
	enable VM support

.PP
\fB--vm-cpu\fP="1"
	number of CPU cores to allocate to Virtual Machine (implies --vm)

.PP
\fB--vm-err\fP[=false]
	enable attaching stderr from VM

.PP
\fB--vm-ip\fP="dhcp"
	IP Address to assign for container usage. Defaults to DHCP within bridge network.

.PP
\fB--vm-ram\fP="1024"
	amount of RAM in MiB to allocate to Virtual Machine (implies --vm)

.PP
\fB-W\fP, \fB--workdir\fP=""
	working directory to be used for /tmp, /var/tmp and $HOME (if -c/--contain was also used)

.PP
\fB-w\fP, \fB--writable\fP[=false]
	by default all Singularity containers are available as read only. This option makes the file system accessible as read/write.

.PP
\fB--writable-tmpfs\fP[=false]
	makes the file system accessible as read-write with non persistent data (with overlay support only)


.SH EXAMPLE
.PP
.RS

.nf

  $ singularity exec /tmp/debian.sif cat /etc/debian_version
  $ singularity exec /tmp/debian.sif python ./hello_world.py
  $ cat hello_world.py | singularity exec /tmp/debian.sif python
  $ sudo singularity exec --writable /tmp/debian.sif apt-get update
  $ singularity exec instance://my_instance ps -ef
  $ singularity exec library://centos cat /etc/os-release

.fi
.RE


.SH SEE ALSO
.PP
\fBsingularity(1)\fP


.SH HISTORY
.PP
7-Mar-2022 Auto generated by spf13/cobra
